{"version":3,"sources":["breakingBad/Character.js","breakingBad/CharacterGrid.js","breakingBad/main.js","chart/Bar.js","chart/Line.js","chart/Pie.js","chart/Chart.js","TextUtil/TextForm.js","TextUtil/Alert.js","TextUtil/Text.js","Timer/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Character","item","style","padding","alt","src","img","height","width","margin","borderRadius","nickname","birthday","portrayed","status","CharacterGrid","items","isLoading","display","flexWrap","justifyContent","map","Main","useState","setItems","setIsLoading","useEffect","a","axios","result","console","log","data","fetchItems","className","Chart","register","registerables","bar","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","line","pie","responsive","align","flexDirection","Bar","Line","Pie","TextForm","props","text","setText","color","mode","onClick","toggleMode","type","id","htmlFor","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","Text","setMode","setAlert","message","setTimeout","document","body","Timer","sec","setSec","isActive","setIsActive","interval","setInterval","clearInterval","App","to","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.468e885a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Character = ({item}) => {\n  return (\n    <div style={{padding:2}}>\n      <img alt='character' src ={item.img} style={{height:200, width: 150, margin: 2, borderRadius: 15} } />\n      <h4>{item.nickname}</h4> \n      <h4>Birthday : {item.birthday}</h4>\n      <h5>Portrayed as {item.portrayed}</h5>\n      <h6> Status : {item.status}</h6>\n    </div>\n  )\n}\n\nexport default Character\n","import React from 'react'\nimport Character from './Character'\n\nconst CharacterGrid = ({ items, isLoading }) => {\n  return  isLoading ? (\n     <h1>Loading...</h1> \n     ) : ( \n     <section style={{display:'flex',flexWrap:'wrap',justifyContent:'space-between', margin:16}}>\n    {items.map(item => (\n      <Character  item ={item} />\n    ))}\n  </section>\n  )\n}\n\nexport default CharacterGrid\n","import React,{ useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CharacterGrid from './CharacterGrid';\n\nconst Main = () => {\n  const [items, setItems] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      const result = await axios(`https://www.breakingbadapi.com/api/characters`)\n\n      console.log(result.data)\n      setItems(result.data)\n      setIsLoading(false)\n    }\n\n    fetchItems()\n  }, [])\n  return (\n    <div className=\"App\">\n      <h1>BREAKING BAD</h1>\n      <CharacterGrid isLoading={isLoading} items={items} />\n      \n    </div>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport { Bar, } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\nconst bar = () => {\n\n  return (\n    <div>\n      <Bar\n        height={400}\n        width={1000}\n        data={{\n          labels:['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange', 'Black'],\n          datasets:[{\n            label:'Votes',\n            data:[12,19,8,15,4,9,17],\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.2)',\n              'rgba(54, 162, 235, 0.2)',\n              'rgba(255, 206, 86, 0.2)',\n              'rgba(75, 192, 192, 0.2)',\n              'rgba(153, 102, 255, 0.2)',\n              'rgba(255, 159, 64, 0.2)',\n              'rgba(0, 0, 0, 0.2)'\n            ],\n            borderColor: [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)',\n              'rgba(0, 0, 0, 1)'\n            ],\n            borderWidth: 1\n          }]\n        }}\n        options={{\n          options: {\n            scales: {\n                y: {\n                    beginAtZero: true\n                }\n            }\n        }\n        }}\n         />\n    </div>\n  )\n}\n\nexport default bar\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\nconst line = () => {\n\n  return (\n    <div>\n      <Line\n        height={400}\n        width={1000}\n        data={{\n          labels:['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange', 'Black'],\n          datasets:[{\n            label:'Votes',\n            data:[12,4,7,10,7,14,15],\n            // data:[{x:12, y:20},{x:19,y:5},{x:8,y:11},{x:15,y:15},{x:4,y:9},{x:9,y:12},{x:17,y:6}],\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.2)',\n              'rgba(54, 162, 235, 0.2)',\n              'rgba(255, 206, 86, 0.2)',\n              'rgba(75, 192, 192, 0.2)',\n              'rgba(153, 102, 255, 0.2)',\n              'rgba(255, 159, 64, 0.2)',\n              'rgba(0, 0, 0, 0.2)'\n            ],\n            borderColor: [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)',\n              'rgba(0, 0, 0, 1)'\n            ],\n            borderWidth: 1\n          }]\n        }}\n        options={{\n          options: {\n            scales: {\n                y: {\n                    beginAtZero: true\n                }\n            }\n        }\n        }}\n         />\n    </div>\n  )\n}\n\nexport default line\n","import React from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\nconst pie = () => {\n\n  return (\n    <div>\n      <Pie\n        height={200}\n        width={300}\n        data={{\n          labels:['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange', 'Black'],\n          datasets:[{\n            label:'Votes',\n            data:[12,4,7,10,7,14,15],\n            // data:[{x:12, y:20},{x:19,y:5},{x:8,y:11},{x:15,y:15},{x:4,y:9},{x:9,y:12},{x:17,y:6}],\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.2)',\n              'rgba(54, 162, 235, 0.2)',\n              'rgba(255, 206, 86, 0.2)',\n              'rgba(75, 192, 192, 0.2)',\n              'rgba(153, 102, 255, 0.2)',\n              'rgba(255, 159, 64, 0.2)',\n              'rgba(0, 0, 0, 0.2)'\n            ],\n            borderColor: [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)',\n              'rgba(0, 0, 0, 1)'\n            ],\n            borderWidth: 1\n          }]\n        }}\n        options={{\n          options: {\n            responsive:true,\n            scales: {\n                y: {\n                    beginAtZero: true\n                }\n            }\n        }\n        }}\n         />\n    </div>\n  )\n}\n\nexport default pie\n","import React from 'react'\nimport Bar from './Bar'\nimport Line from './Line'\nimport Pie from './Pie'\n\nconst Chart = () => {\n  return (\n    <div className='container' \n    style={{display:'flex',\n            align:'center',\n            flexDirection:'column',\n            justifyContent:'space-around',\n            padding:16\n            }}>\n      <h1> Types of chart using chartjs</h1>\n      <Bar />\n      <Line />\n      <div style={{ width:600 }}>\n      <Pie />\n      </div>\n    </div>\n  )\n}\n\nexport default Chart\n","import React, {useState} from 'react';\n\nconst TextForm = (props) => {\n  const [text, setText] = useState(''); \n\n  const handleUpClick =()=> {\n    let newText = text.toUpperCase();\n    setText(newText)\n    props.showAlert(\"Converted to uppercase!\",\"success\");\n  }\n  const handleLoClick = ()=>{ \n    let newText = text.toLowerCase();\n    setText(newText)\n    props.showAlert(\"Converted to lowercase!\", \"success\");\n  }\n\n  const handleClearClick = ()=>{ \n    let newText = '';\n    setText(newText);\n    props.showAlert(\"Text Cleared!\", \"success\");\n  }\n\n  const handleOnChange = (event)=>{\n    setText(event.target.value) \n  }\n  const handleCopy = () => {\n    navigator.clipboard.writeText(text); \n    props.showAlert(\"Copied to Clipboard!\", \"success\");\n  }\n  const handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Extra spaces removed!\", \"success\");\n  }\n\n  return <div style={{color: props.mode==='dark'?'white':'#042743'}}>\n    <h1>Text-Utils </h1>\n    <div style={{ margin: 8, display:'flex', justifyContent:'space-between'}}>\n    <h2>A platform to analyze your text and play around it with various options given..</h2>\n    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n      <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\n    </div>\n    </div>\n    <div className=\"container mb-3 my-4\">\n    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n    </div>\n    <button type=\"button\" className=\"btn me-2 btn-primary\" onClick={handleUpClick}>ToUpperCase</button>\n    <button type=\"button\" className=\"btn me-2 btn-primary\" onClick={handleLoClick}>ToLowerCase</button>\n    <button type=\"button\" className=\"btn me-2 btn-primary\" onClick={handleCopy}>Copy</button>\n    <button type=\"button\" className=\"btn me-2 btn-primary\" onClick={handleExtraSpaces}>Remove extra space</button>\n    <button type=\"button\" className=\"btn me-2 btn-danger\" onClick={handleClearClick}>Clear</button>\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\n      <h2>Your text summary</h2>\n      <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\n      <p>{0.008 *  text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes read</p>\n      <h2>Preview</h2>\n      <p>{text.length>0?text:\"Nothing to preview!\"}</p>\n    </div>\n  </div>;\n};\n\nexport default TextForm;\n","import React from 'react';\n\nconst Alert = (props) => {\n  const capitalize = (word) => {\n    const lower = word.toLowerCase();\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\n  }\n  return(\n    <div style={{height: '50px'}}>\n      {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\n        </div>}\n    </div>\n  )}\n\nexport default Alert;\n","import React, { useState } from 'react';\nimport TextForm from './TextForm';\nimport Alert from './Alert';\n\nconst Text = () => {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert =(message, type) => {\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1500);\n  }\n\n  const toggleMode =() => {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n\n  return <div>\n    <Alert alert = {alert} />\n    <TextForm mode={mode} toggleMode={toggleMode} showAlert={showAlert} />\n  </div>;\n};\n\nexport default Text;\n\n","import React, { useState, useEffect } from 'react';\n\nfunction Timer() {\n  const[sec, setSec] = useState(0);\n  const[isActive, setIsActive]= useState(false);\n\n  function toggle(){\n    setIsActive(!isActive);\n  }\n\n  function reset (){\n    setSec(0);\n    setIsActive(false);\n  }\n\n  useEffect(()=>{\n    let interval = null;\n    if(isActive && sec<59) {\n      interval =setInterval(() => {\n        setSec(sec => sec + 1);\n      },1000);\n    } else if (!isActive && sec !==0){\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval)\n  }, [isActive, sec]);\n\n  return <>\n  <div>\n    <h1>Timer</h1>\n    <div className='container'>\n    {/* <div className=\"row\" style={{width:600, margin:0, alignItems:'center'}}>\n    <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Input time</label>\n    <input style={{width:100}} type=\"number\" className=\"form-control\" id=\"inputPassword\" />\n  </div> */}\n  <div className=\"timer\" style={{display:'flex',justifyContent:'center'}}>\n  <h1>{sec}s</h1>\n  </div>\n  <button type=\"button\" onClick={toggle} className={`btn btn-${isActive?'primary' : 'success'} my-3 me-5`}>{isActive ? 'Pause' : 'Start'}</button>\n  <button type=\"button\" onClick={reset} className=\"btn btn-danger\">Reset</button>\n    </div>\n  </div>\n\n  </>;\n}\n\nexport default Timer;\n","import Main from './breakingBad/main';\nimport Chart from './chart/Chart';\nimport Text from './TextUtil/Text';\nimport Timer from './Timer/Timer';\nimport { BrowserRouter as Router,Routes, Route, Link } from 'react-router-dom';\nimport './App.css';\n\nconst App = () => {\n\n  return (\n    <Router>\n      <div className=\"App\">\n      <nav>\n        <ul className='Navbar'>\n          <li className='list'><Link className='link' to='/'>Breaking Bad</Link></li>\n          <li className='list'><Link className='link' to='/charts'>Charts</Link></li>\n          <li className='list'><Link className='link' to='/textUtils'>Text-Util</Link></li>\n          <li className='list'><Link className='link' to='/timer'>Timer</Link></li>\n        </ul>\n      </nav>\n      <Routes>\n        <Route exact path='/' element={<Main />} />\n        <Route exact path='/charts' element={<Chart /> } />\n        <Route exact path='/textUtils' element={<Text /> } />\n        <Route exact path='/timer' element={<Timer /> } />\n      </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}